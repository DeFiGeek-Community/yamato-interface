name: Build & Test

on:
  push:
  # pull_request_target:
  # pull_request:
  #   branches: [$default-branch]

jobs:
  build_check:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn
      - name: build
        run: yarn build
        env:
          CI: false

      - name: discord notification（if failure）
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn
      - name: format check
        run: yarn ci:format
      - name: lint check
        run: yarn lint

      - name: discord notification（if failure）
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn
      - name: test
        run: yarn test -- --coverage
        env:
          REACT_APP_INFURA_KEY: ${{ secrets.REACT_APP_INFURA_KEY }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: discord notification（if failure）
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
